name: Tests
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
jobs:
  test_bin:
    defaults:
      run:
        working-directory: py-ext-bin-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build setuptools wheel
          python -m pip install pytest
          make manylinux2014_x86_64
          pip install dist/*.whl
      - name: Test with pytest
        run: |
          pytest
  test_data:
    defaults:
      run:
        working-directory: py-ext-data-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build setuptools wheel
          python -m pip install pytest
          make wheel
          pip install dist/*.whl
      - name: Test with pytest
        run: |
          pytest
  test_data_poetry:
    defaults:
      run:
        working-directory: py-ext-data-poetry
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.8.4
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Build wheel
        run: |
          make wheel
          poetry run pip install dist/*.whl
      - name: Test with pytest
        run: poetry run pytest
